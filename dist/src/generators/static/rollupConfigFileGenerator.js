"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
const ts_morph_1 = require("ts-morph");
const nameUtils_1 = require("../../utils/nameUtils");
function generateRollupConfig(clientDetails, packageDetails, project) {
    const rollupFile = project.createSourceFile("rollup.config.js", undefined, {
        overwrite: true
    });
    let browserNameSpace = nameUtils_1.normalizeName(packageDetails.nameWithoutScope, nameUtils_1.NameType.Class);
    if (packageDetails.scopeName) {
        browserNameSpace = `${nameUtils_1.normalizeName(packageDetails.scopeName, nameUtils_1.NameType.Class)}.${browserNameSpace}`;
    }
    rollupFile.addStatements([
        `import rollup from "rollup";`,
        `import nodeResolve from "rollup-plugin-node-resolve";`,
        `import sourcemaps from "rollup-plugin-sourcemaps";`
    ]);
    const rollupConfig = `{
    input: "./esm/${clientDetails.sourceFileName}.js",
    external: [
      "@azure/core-http"
    ],
    output: {
      file: "./dist/${packageDetails.nameWithoutScope}.js",
      format: "umd",
      name: "${browserNameSpace}",
      sourcemap: true,
      globals: {
        "@azure/core-http": "coreHttp"
      },
      banner: \`/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */ \`
    },
    plugins: [
      nodeResolve({ module: true }),
      sourcemaps()
    ]
};`;
    rollupFile.addVariableStatement({
        declarationKind: ts_morph_1.VariableDeclarationKind.Const,
        docs: ["@type {rollup.RollupFileOptions}"],
        declarations: [
            {
                name: "config",
                initializer: rollupConfig
            }
        ]
    });
    rollupFile.addStatements("\n\nexport default config;");
}
exports.generateRollupConfig = generateRollupConfig;
//# sourceMappingURL=rollupConfigFileGenerator.js.map